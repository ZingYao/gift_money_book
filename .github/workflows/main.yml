name: Build on Tag

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  build:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18.*'

      - name: Build in Node
        run: cd frontend;npm install; npm run build

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-verison: '1.18.*'

      - name: Copy build.zip to Go environment
        run: cp frontend/build.zip backend/

      - name: Gen Golang static code
        run: cd backend;go run main.go build;

      - name: Go Build Windows Amd64
        run: GOARCH=amd64 GOOS=windows cd backend; go build -o ../电子礼金簿.windows.amd64.exe main.go

      - name: Go Build Windows 385
        run: GOARCH=386 GOOS=windows cd backend; go build -o ../电子礼金簿.windows.386.exe main.go

      - name: Go Build Windows arm
        run: GOARCH=arm GOOS=windows cd backend; go build -o ../电子礼金簿.windows.arm.exe main.go

      - name: Go Build Windows arm64
        run: GOARCH=arm64 GOOS=windows cd backend; go build -o ../电子礼金簿.windows.arm64.exe main.go

      - name: Go Build Darwin arm64
        run: GOARCH=arm64 GOOS=darwin cd backend; go build -o ../电子礼金簿.macos.arm64 main.go

      - name: Go Build Darwin amd64
        run: GOARCH=amd64 GOOS=darwin cd backend; go build -o ../电子礼金簿.macos.amd64 main.go

      - name: Go Build Linux 386
        run: GOARCH=386 GOOS=linux cd backend; go build -o ../电子礼金簿.linux.386 main.go

      - name: Go Build Linux amd64
        run: GOARCH=amd64 GOOS=linux cd backend; go build -o ../电子礼金簿.linux.amd64 main.go

      - name: Go Build Linux arm
        run: GOARCH=arm GOOS=linux cd backend; go build -o ../电子礼金簿.linux.arm main.go

      - name: Go Build Linux arm64
        run: GOARCH=arm64 GOOS=linux cd backend; go build -o ../电子礼金簿.linux.arm64 main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: "This is a release"

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: backend/电子礼金簿.windows.386.exe
          asset_name: 电子礼金簿.windows.386.exe

      - name: Release Upload
        uses: d1ceward/draft-assets-release-action@v2.1.0
        with:
          token: ${{ secrets.TOKEN }}
          files: |
            电子礼金簿.windows.386.exe
            电子礼金簿.windows.amd64.exe
            电子礼金簿.windows.arm.exe
            电子礼金簿.windows.arm64.exe
            电子礼金簿.macos.arm64
            电子礼金簿.macos.amd64
            电子礼金簿.linux.386
            电子礼金簿.linux.amd64
            电子礼金簿.linux.arm
            电子礼金簿.linux.arm64